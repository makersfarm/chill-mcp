name: Run Tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      checks: write

    strategy:
      matrix:
        python-version: ['3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests with pytest
      id: pytest
      run: |
        pytest tests/ -v --tb=short --junitxml=pytest-report.xml --html=pytest-report.html --self-contained-html
      continue-on-error: true

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always() && github.event_name == 'pull_request'
      with:
        files: |
          pytest-report.xml
        comment_mode: always
        check_name: Test Results
        report_individual_runs: true
        deduplicate_classes_by_file_name: false

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results
        path: |
          pytest-report.xml
          pytest-report.html
          .coverage
        retention-days: 30

    - name: Fail if tests failed
      if: steps.pytest.outcome == 'failure'
      run: exit 1
